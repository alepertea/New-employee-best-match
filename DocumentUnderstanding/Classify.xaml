<Activity mc:Ignorable="sap sap2010" x:Class="Classify" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:p1="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p3="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="JSON type argument to store configuration data of the process (constants, log messages)." Name="in_Config" Type="InArgument(njl:JObject)" />
    <x:Property sap2010:Annotation.AnnotationText="The file path of the target document that is going to be processed." Name="in_TargetDocument" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Stores the project taxonomy against which the documents can be processed." Name="in_DocTaxonomy" Type="InArgument(p:DocumentTaxonomy)" />
    <x:Property sap2010:Annotation.AnnotationText="The Document Object Model (DOM) of the target document." Name="in_DOM" Type="InArgument(p1:Document)" />
    <x:Property sap2010:Annotation.AnnotationText="The text extracted from the target document." Name="in_DocText" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Classification results given by running the chosen classifier over the target document." Name="out_ClassificationResults" Type="OutArgument(p2:ClassificationResult[])" />
    <x:Property sap2010:Annotation.AnnotationText="Used to control the amount of time between retries in the Retry Scope activity." Name="in_RetryInterval" Type="InArgument(x:TimeSpan)" />
    <x:Property sap2010:Annotation.AnnotationText="Used to control the number of attempts of retrying in case of a system exception." Name="in_MaxAttempts" Type="InArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1111.2,1280</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Classify_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="62">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="33">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Classify" sap:VirtualizedContainerService.HintSize="560.8,1175.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="API Key used for Document Understanding Framework." Name="apiKey" />
      <Variable x:TypeArguments="ss:SecureString" sap2010:Annotation.AnnotationText="The password used for API Key credential." Name="credentialPassword" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="The username used for API Key credential." Name="credentialUsername" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage sap2010:Annotation.AnnotationText="Trace the start of the workflow." DisplayName="Log Message - Start of workflow" sap:VirtualizedContainerService.HintSize="519.2,96.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[in_Config(&quot;logMessage_ClassificationStarted&quot;)(&quot;name&quot;).ToString + in_TargetDocument]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:GetRobotCredential TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Extract API Key for Document Understanding Framework." AssetName="[in_Config(&quot;ApiKey&quot;)(&quot;name&quot;).ToString]" DisplayName="Get API Key" FolderPath="[in_Config(&quot;orchestratorFolderPath&quot;)(&quot;name&quot;).ToString]" sap:VirtualizedContainerService.HintSize="519.2,66.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[credentialPassword]" Username="[credentialUsername]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotCredential>
    <ui:RetryScope ContinueOnError="False" DisplayName="Retry Scope - Classify" sap:VirtualizedContainerService.HintSize="519.2,715.2" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="[in_MaxAttempts]" RetryInterval="[in_RetryInterval]">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <p3:ClassifyDocumentScope ClassificationResults="[out_ClassificationResults]" DisplayName="Classify Document Scope - Classify" DocumentObjectModel="[in_DOM]" DocumentPath="[in_TargetDocument]" DocumentText="[in_DocText]" sap:VirtualizedContainerService.HintSize="477.6,539.2" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[in_DocTaxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIc1b31632bb4a4d0c9b3ad9b1c7322527&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;CVs.NoCategory.Berry&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;CVs.NoCategory.Berry&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;CVs.NoCategory.Blue&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;CVs.NoCategory.Blue&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;CVs.NoCategory.Grey&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;CVs.NoCategory.Grey&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;CVs.NoCategory.BW&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;CVs.NoCategory.BW&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;CVs.NoCategory.Simple&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;CVs.NoCategory.Simple&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UIc1b31632bb4a4d0c9b3ad9b1c7322527&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UIc1b31632bb4a4d0c9b3ad9b1c7322527&quot;:[]}}">
            <p3:ClassifyDocumentScope.Classifiers>
              <p3:IntelligentKeywordClassifier LearningData="{x:Null}" ApiKey="[new System.Net.NetworkCredential(String.Empty, credentialPassword).Password]" DisplayName="Intelligent Keyword Classifier" Endpoint="[in_Config(&quot;classificationEndpoint&quot;)(&quot;name&quot;).ToString]" sap:VirtualizedContainerService.HintSize="233.6,212.8" sap2010:WorkflowViewState.IdRef="IntelligentKeywordClassifier_1" LearningFilePath="[in_Config(&quot;classifierLearningFilePath&quot;)(&quot;name&quot;).ToString]" PersistenceId="UIc1b31632bb4a4d0c9b3ad9b1c7322527">
                <p3:IntelligentKeywordClassifier.ClassifierResult>
                  <OutArgument x:TypeArguments="p4:ClassifierResult">
                    <DelegateArgumentReference x:TypeArguments="p4:ClassifierResult">
                      <DelegateOutArgument x:TypeArguments="p4:ClassifierResult" Name="ClassificationResult" />
                    </DelegateArgumentReference>
                  </OutArgument>
                </p3:IntelligentKeywordClassifier.ClassifierResult>
                <p3:IntelligentKeywordClassifier.DocumentObjectModel>
                  <InArgument x:TypeArguments="p1:Document">
                    <DelegateArgumentValue x:TypeArguments="p1:Document">
                      <DelegateInArgument x:TypeArguments="p1:Document" Name="DocumentObjectModel" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p3:IntelligentKeywordClassifier.DocumentObjectModel>
                <p3:IntelligentKeywordClassifier.DocumentPath>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p3:IntelligentKeywordClassifier.DocumentPath>
                <p3:IntelligentKeywordClassifier.DocumentText>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p3:IntelligentKeywordClassifier.DocumentText>
                <p3:IntelligentKeywordClassifier.DocumentTypes>
                  <InArgument x:TypeArguments="p4:ClassifierDocumentType[]">
                    <DelegateArgumentValue x:TypeArguments="p4:ClassifierDocumentType[]">
                      <DelegateInArgument x:TypeArguments="p4:ClassifierDocumentType[]" Name="DocumentTypes" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p3:IntelligentKeywordClassifier.DocumentTypes>
              </p3:IntelligentKeywordClassifier>
            </p3:ClassifyDocumentScope.Classifiers>
          </p3:ClassifyDocumentScope>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <ui:LogMessage sap2010:Annotation.AnnotationText="Show classification results." DisplayName="Log Message - End of workflow" sap:VirtualizedContainerService.HintSize="519.2,84" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[in_Config(&quot;logMessage_AutoClassificationResults&quot;)(&quot;name&quot;).ToString + string.Join(&quot; | &quot;, out_ClassificationResults.Select(function(cResult) cResult.DocumentTypeId + &quot; : &quot; + cResult.Confidence.ToString))]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>